#!/bin/env python
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import random

from nmigen.hdl.ast import Cat, Const, signed
from nmigen.sim import Settle, Tick

from nmigen_cfu import TestBase

from .math import SaturatingRoundingDoubleHighMul

# Test cases generated from original C implementation
_SRDHM_TEST_CASES = [
    # a (value), b (quantized_multipler), expected result
    (76199, 1799162196, 63840),
    (-45918, 1999098553, -42745),
    (113093, 1673911861, 88153),
    (-103077, 1190764262, -57155),
    (-34232, 1477988098, -23560),
    (-59473, 1648902784, -45665),
    (120827, 1885389667, 106080),
    (-24191, 1473168262, -16595),
    (-56185, 1776203374, -46471),
    (113562, 2052420060, 108535),
    (47666, 1729231925, 38382),
    (27430, 1975945832, 25239),
    (-111628, 1393592893, -72440),
    (41103, 1818749429, 34811),
    (41380, 1274616254, 24561),
    (4902, 1678418407, 3831),
    (61765, 1287000734, 37016),
    (-36200, 1442403925, -24315),
    (-105187, 1197488585, -58655),
    (71639, 1565520041, 52225),
    (-33258, 1595957788, -24717),
    (39689, 1423886284, 26316),
    (-100633, 1760419674, -82495),
    (116562, 1802734351, 97850),
    (92914, 1092090772, 47251),
    (82883, 1734861670, 66958),
    (57166, 1912255582, 50904),
    (75346, 1992033070, 69892),
    (-83656, 1632785000, -63606),
    (63200, 1405592453, 41366),
    (-49318, 1200228270, -27564),
    (8275, 1673124755, 6447),
    (85644, 1737222681, 69282),
    (-40597, 1547023683, -29246),
    (-31909, 1336729220, -19862),
    (45454, 1206552787, 25538),
    (4972, 1266032220, 2931),
    (-19512, 2057461827, -18694),
    (235, 1953821820, 214),
    (61300, 1720881690, 49123),
    (68229, 1809146070, 57479),
    (36454, 1576160004, 26756),
    (-110586, 1428097357, -73541),
    (-96195, 1951204560, -87403),
    (92792, 1304886675, 56384),
    (89436, 1880314336, 78309),
    (82646, 1272078154, 48956),
    (34372, 2116064125, 33869),
    (-59501, 1664891747, -46130),
    (-99939, 1852312277, -86202),
    (-3113, 1145983455, -1661),
    (55215, 1880447994, 48349),
    (110403, 1113321777, 57236),
    (23116, 1570010167, 16900),
    (-2583, 1227779863, -1477),
    (85789, 1222210857, 48826),
    (-87366, 1102802313, -44865),
    (-27417, 1228124265, -15680),
    (-47617, 1998685012, -44318),
    (34293, 2140014655, 34174),
    (-3452, 1967903050, -3163),
    (-41255, 1543279806, -29648),
    (-19972, 1855490651, -17256),
    (-115484, 1944772033, -104583),
    (-94052, 1568785104, -68707),
    (-84195, 1542010281, -60457),
    (64620, 1444904141, 43479),
    (35658, 1729292906, 28714),
    (683, 1605542539, 511),
    (86664, 1218739791, 49184),
    (71854, 1825797432, 61090),
    (-40430, 1850313723, -34835),
    (517, 1207184966, 291),
    (55659, 1935689127, 50170),
    (-102608, 1649388495, -78809),
    (-91465, 1271253544, -54145),
    (-103661, 1745470500, -84255),
    (63765, 2060859198, 61193),
    (-53913, 1862618106, -46761),
    (-264, 1521947588, -187),
    (82360, 2082814599, 79880),
    (81899, 1529235916, 58321),
    (-116459, 1985030873, -107649),
    (-103947, 1102943297, -53387),
    (107625, 2139653618, 107233),
    (-86358, 1343644072, -54033),
    (-101746, 2111171020, -100026),
    (87873, 1815044516, 74270),
    (-11397, 1148791307, -6097),
    (23925, 1534599501, 17097),
    (-31358, 1488524351, -21736),
    (59542, 1645438751, 45622),
    (-113056, 1116124901, -58759),
    (-96429, 1975242245, -88695),
    (39948, 1483623346, 27599),
    (106175, 2119373911, 104785),
    (-123803, 1139955622, -65719),
    (115382, 1116312282, 59978),
    (56207, 1758239044, 46019),
    (46695, 1104444813, 24015),
]


class SaturatingRoundingDoubleHighMulTest(TestBase):
    def create_dut(self):
        return SaturatingRoundingDoubleHighMul()

    def test_it_calculates_correctly(self):
        def process():
            yield self.dut.output.ready.eq(1)
            for (a, b, expected) in _SRDHM_TEST_CASES:
                yield self.dut.input.payload.a.eq(a)
                yield self.dut.input.payload.b.eq(b)
                yield self.dut.input.valid.eq(1)
                yield
                yield self.dut.input.valid.eq(0)
                yield  # 3 cycles to process
                yield
                yield
                self.assertTrue((yield self.dut.output.valid))
                self.assertEqual((yield self.dut.output.payload), expected)

        self.run_sim(process, False)
